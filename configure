#!/bin/sh

# Configuration script for the dtarbitragec.
# Created by dta90d on 2018.09.17.

# Functions other than botdata creates temporary file from two: instructions and configuraion.
#+Then, instructions are deleted and configuration is rewriten.

m_help() {
    echo Usage: ./configure [-e \<editor\>] \<command\> [ARGS]
    echo
    echo EDITOR: any text editor you prefer to edit config files with.
    echo
    echo COMMANDS:
    echo "       modes           enabling and disabling modes"
    echo "       markets         enabling and disabling markets to work with"
    echo "       bot [ARGS]      bots' strategy like on what spreads to react to"
    echo "       finance         bots' settings like order minimum and maximum cost"
    echo "       keys            market api keys for the bot"
    echo "       mail            mail notifications configuration"
}

PERL_BIN_DIR="/home/the_creator_of_/w/BRAT/cryptocurrency-arbitrage-master/perl/perls/stable/bin"
PERL_LIB_DIR="/home/the_creator_of_/w/BRAT/cryptocurrency-arbitrage-master/perl/perls/stable/lib/perl5"

D_PWD="/home/the_creator_of_/w/BRAT/cryptocurrency-arbitrage-master"
D_DATA="$D_PWD/data"
D_HELP="$D_PWD/data-static/man"
D_DEFAULT="$D_PWD/data-static/default"
D_UTILS="$D_PWD/utils"

F_HELP=""    # Instructions
F_CONFIG=""  # Config
F_DEFAULT="" # Default config
F_TMP=""     # Tmp file

F_MODES="$D_DATA/modes"
F_MARKETS="$D_PWD/data-static/coin_dict.full"
F_FINANCE="$D_DATA/finance"
F_KEYS="$D_DATA/keys"
F_MAIL="$D_DATA/mail"

F_DEFAULT_MODES="$D_DEFAULT/modes"
F_DEFAULT_MARKETS="$D_DEFAULT/coin_dict.full"
F_DEFAULT_FINANCE="$D_DEFAULT/finance"
F_DEFAULT_KEYS="$D_DEFAULT/keys"
F_DEFAULT_MAIL="$D_DEFAULT/mail"

F_HELP_MODES="$D_HELP/modes"
F_HELP_MARKETS="$D_HELP/markets"
F_HELP_FINANCE="$D_HELP/finance"
F_HELP_KEYS="$D_HELP/keys"
F_HELP_MAIL="$D_HELP/mail"

B_PERL="$PERL_BIN_DIR/perl"
B_BOTDATA="$D_UTILS/botdata_manager/BotdataManager.pm"
B_OPTIMIZE="$D_UTILS/coin_dict_check/optimize.pl"

M_EDITOR="Please enter the name of a text editor to use: "

if [ ! -d $D_DATA ]; then mkdir $D_DATA; fi

next() {
    echo \[Press ENTER to continue\]
    read
}

get_editor() {
    if [ ! $O_EDITOR ]; then
        echo $M_EDITOR
        read O_EDITOR
    else
        return 1
    fi
}

e_editor() {
    echo
    echo "Error: check if the editor you've entered is installed. Your editor: '$O_EDITOR'"
    exit 1
}

create_tmp() { #TODO mash help with #####
    HELP=`cat $F_HELP`
    if [ -f $F_CONFIG ]; then
        CONFIG=`cat $F_CONFIG`
    else
        CONFIG=`cat $F_DEFAULT`
    fi

    if [ ! "$HELP" ]; then
        HELP="# There's no manual found in './data-static/man' directory. Run 'git pull' to update your man pages."
    fi
    
    echo "$HELP" > $F_TMP
    echo "$CONFIG" >> $F_TMP
}

write_config() {
    sed -i '/^#/d' $F_TMP # Erase all comments.
    mv $F_TMP $F_CONFIG
}

check_perl() { # If no local perl, use default one.
    if [ ! -x $B_PERL ]; then
        B_PERL="perl"
    fi
}

c_modes() {
    get_editor

    F_CONFIG=$F_MODES
    F_DEFAULT=$F_DEFAULT_MODES
    F_HELP=$F_HELP_MODES
    F_TMP="$F_CONFIG.tmp"
    create_tmp

    $O_EDITOR $F_TMP || e_editor

    write_config

    echo
    echo Modes successfully configured!
}

c_markets() {
    get_editor

    F_CONFIG=$F_MARKETS
    F_DEFAULT=$F_DEFAULT_MARKETS
    F_HELP=$F_HELP_MARKETS
    F_TMP="$F_CONFIG.tmp"
    create_tmp

    $O_EDITOR $F_TMP || e_editor

    write_config

    check_perl
    $B_PERL -I $PERL_LIB_DIR -- $B_OPTIMIZE $F_MARKETS


    echo
    echo Markets are successfully configured!
}

c_bot() {
    check_perl
    $B_PERL -I $PERL_LIB_DIR -- $B_BOTDATA $A_BOTDATA
}

c_finance() {
    get_editor

    F_CONFIG=$F_FINANCE
    F_DEFAULT=$F_DEFAULT_FINANCE
    F_HELP=$F_HELP_FINANCE
    F_TMP="$F_CONFIG.tmp"
    create_tmp

    $O_EDITOR $F_TMP || e_editor

    write_config

    echo
    echo Finance settings successfully configured!
}

c_keys() {
    get_editor

    F_CONFIG=$F_KEYS
    F_DEFAULT=$F_DEFAULT_KEYS
    F_HELP=$F_HELP_KEYS
    F_TMP="$F_CONFIG.tmp"
    create_tmp

    $O_EDITOR $F_TMP || e_editor

    write_config

    echo
    echo Keys successfully configured!
}

c_mail() {
    get_editor

    F_CONFIG=$F_MAIL
    F_DEFAULT=$F_DEFAULT_MAIL
    F_HELP=$F_HELP_MAIL
    F_TMP="$F_CONFIG.tmp"
    create_tmp

    $O_EDITOR $F_TMP || e_editor

    write_config

    echo
    echo Mail successfully configured!
}

if [ "$1" == "-e" ]; then
    O_EDITOR="$2";
    shift 2
fi

case "$1" in
    (modes)
        c_modes
        ;;
    (markets)
        c_markets
        ;;
    (bot)
        shift
        A_BOTDATA="$@"
        c_bot
        ;;
    (finance)
        c_finance
        ;;
    (keys)
        c_keys
        ;;
    (mail)
        c_mail
        ;;
    ("")
        if [ $O_EDITOR ]; then echo Error: no command specified.; echo
        else echo Error: no editor specified.; echo
        fi
        m_help
        ;;
    (*)
        echo Error: unknown argument: \'"$1"\'
        echo
        m_help
        ;;
esac

exit 0
